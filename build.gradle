import java.nio.file.Path
import java.nio.file.FileSystems
import java.nio.file.Files
import java.nio.file.StandardCopyOption

buildscript {
	repositories {
		mavenCentral()
		gradlePluginPortal()
		maven { url "https://maven.fabricmc.net" }
		maven { url "https://repo.sleeping.town" }
	}
	dependencies {
		classpath "com.unascribed:voldeloom:1.0.1+1.4.7"
	}
}

apply plugin: "java"
apply plugin: "com.unascribed.voldeloom"

sourceCompatibility = 6
targetCompatibility = 6

//Goofy Zone ~Ten Desires~ (modified a lot from the buildcraft one)
def forgeVersion = "1.4.7-6.6.2.534"
def minecraftVersion = "1.4.7"

def mcp = "mcp726a.zip"
def forgeZip = "forge${forgeVersion}.zip"
def mcpForged = "mcp726a-forged.zip"

void get(File file, String url) {
	println "Downloading ${url} to ${file}... (might take a bit)"
	file.withOutputStream { it << new URL(url).openStream() }
	if(file.length() == 0) throw new IllegalStateException("${url} downloaded as 0 bytes. Archive.org sometimes returns 0-byte files on 404s, double-check the url?")
}

if(!file(mcp).exists()) get(file(mcp), "https://archive.org/download/minecraftcoderpack/minecraftcoderpack.zip/minecraftcoderpack%2F${minecraftVersion}%2F${mcp}")
if(!file(forgeZip).exists()) get(file(forgeZip), "https://maven.minecraftforge.net/net/minecraftforge/forge/${forgeVersion}/forge-${forgeVersion}-src.zip")
if(!file(mcpForged).exists()) {
	println "Merging Forge config into MCP..."
	
	Path mcpZipPath = file(mcp).toPath()
	Path forgeZipPath = file(forgeZip).toPath()
	Path mcpForgedPath = file(mcpForged).toPath()
	
	Files.copy(mcpZipPath, mcpForgedPath, StandardCopyOption.REPLACE_EXISTING)
	
	//modify the zip in-place.
	//Take forge's mcp config (located at forge.zip/forge/fml/conf) and paste it over mcp.zip (at mcp726a-forged.zip/conf)
	FileSystems.newFileSystem(mcpForgedPath, null).withCloseable { mcpForgedFs ->
		FileSystems.newFileSystem(forgeZipPath, null).withCloseable { forgeZipFs ->
			Files.walk(forgeZipFs.getPath("/forge/fml/conf")).forEach { src -> 
				if(Files.isRegularFile(src)) {
					Path dst = mcpForgedFs.getPath(src.toString().substring("/forge/fml".length())) //hopefully this works lol
					println "Copying ${src} (${src.fileSystem}) into ${dst} (${dst.fileSystem})"
					Files.createDirectories(dst.parent)
					Files.copy(src, dst, StandardCopyOption.REPLACE_EXISTING)
				}
			}
		}
	}
}
//end goofy zone

group = "agency.highlysuspect"
archivesBaseName = "hopper"
version = "1.0"

repositories {
	maven { url "https://maven.fabricmc.net/" }
	maven { url "https://maven.minecraftforge.net/" }
	maven { url "https://repo.spongepowered.org/maven" }
}

dependencies {
	minecraft "com.mojang:minecraft:1.4.7"
	forge "net.minecraftforge:forge:${forgeVersion}:universal@zip"
	//noinspection GradlePackageUpdate, hahahahhaaaaaaahaha
	implementation "com.google.guava:guava:12.0.1"
	mappings files(mcpForged)
}

processResources {
	inputs.property "version", project.version

	filesMatching(["**/mcmod.info", "**/mods.toml"]) {
		expand "version": project.version
	}
}

tasks.jar.dependsOn(processResources)

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

